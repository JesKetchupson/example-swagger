// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Тестовая служба работы с задачами",
    "contact": {},
    "version": "1.0.0"
  },
  "host": "www.example.com",
  "basePath": "/",
  "paths": {
    "/task": {
      "get": {
        "description": "1. Создает запись в БД (любой, на выбор разработчика) cо сгенерированным UUID, текущим временем и статусом ` + "`" + `created` + "`" + `\n2. Возвращает клиенту код 202 и UUID задачи\n3. Обновляет в БД для данного UUID текущее время и меняет статус на ` + "`" + `running` + "`" + `\n4. Ждет 2 минуты (имитируя выполнение задачи)\n5. Обновляет в БД для данного UUID текущее время и меняет статус на ` + "`" + `finished` + "`" + `\n",
        "produces": [
          "application/json"
        ],
        "summary": "createTask",
        "operationId": "createTask",
        "responses": {
          "202": {
            "description": "Задача успешно созданы и запущена. UUID задачи в ответе",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          "500": {
            "description": "Что-то пошло не так",
            "schema": {}
          }
        }
      }
    },
    "/task/{taskId}": {
      "get": {
        "description": "1. Ищет в БД текущее состояние задачи.\n2. Возвращает текущее состояние задачи",
        "produces": [
          "application/json"
        ],
        "summary": "getTaskSync",
        "operationId": "getTaskSync",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID Задачи",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Состояние задачи",
            "schema": {
              "$ref": "#/definitions/TaskStatus"
            }
          },
          "400": {
            "description": "Передан не UUID",
            "schema": {}
          },
          "404": {
            "description": "Задача с {taskId} не найдена",
            "schema": {}
          },
          "500": {
            "description": "Что-то пошло не так",
            "schema": {}
          }
        }
      }
    },
    "/task/{taskId}/finished": {
      "get": {
        "description": "1. Ищет в БД текущее состояние задачи.\n2. Если статус не ` + "`" + `finished` + "`" + `, то\n   1. Ждет, когда задача завершится\n      * регулярно проверяя состояние задачи\n      * не ожидая дольше 5 минут\n   2. Отправляет клиенту состояние задачи\n3. Иначе возвращает текущее состояние задачи\n",
        "produces": [
          "application/json"
        ],
        "summary": "getFinishedTask",
        "operationId": "getFinishedTask",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID Задачи",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Состояние задачи",
            "schema": {
              "$ref": "#/definitions/TaskStatus"
            }
          },
          "400": {
            "description": "Передан не UUID",
            "schema": {}
          },
          "404": {
            "description": "Задача с {taskId} не найдена",
            "schema": {}
          },
          "408": {
            "description": "Ожидание превысило порог в 5 минут",
            "schema": {}
          },
          "500": {
            "description": "Что-то пошло не так",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "Status": {
      "description": "## статус задачи\n- ` + "`" + `created` + "`" + ` Задача создана, но ещё не запущена\n- ` + "`" + `running` + "`" + ` Задача выполняется\n- ` + "`" + `finished` + "`" + ` Задача выполнена",
      "type": "string",
      "title": "Status",
      "enum": [
        "created",
        "running",
        "finished"
      ]
    },
    "TaskStatus": {
      "description": "# Состояние задачи",
      "type": "object",
      "title": "TaskStatus",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "timestamp": {
          "description": "## Дата и время изменения статуса",
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Тестовая служба работы с задачами",
    "contact": {},
    "version": "1.0.0"
  },
  "host": "www.example.com",
  "basePath": "/",
  "paths": {
    "/task": {
      "get": {
        "description": "1. Создает запись в БД (любой, на выбор разработчика) cо сгенерированным UUID, текущим временем и статусом ` + "`" + `created` + "`" + `\n2. Возвращает клиенту код 202 и UUID задачи\n3. Обновляет в БД для данного UUID текущее время и меняет статус на ` + "`" + `running` + "`" + `\n4. Ждет 2 минуты (имитируя выполнение задачи)\n5. Обновляет в БД для данного UUID текущее время и меняет статус на ` + "`" + `finished` + "`" + `\n",
        "produces": [
          "application/json"
        ],
        "summary": "createTask",
        "operationId": "createTask",
        "responses": {
          "202": {
            "description": "Задача успешно созданы и запущена. UUID задачи в ответе",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          "500": {
            "description": "Что-то пошло не так",
            "schema": {}
          }
        }
      }
    },
    "/task/{taskId}": {
      "get": {
        "description": "1. Ищет в БД текущее состояние задачи.\n2. Возвращает текущее состояние задачи",
        "produces": [
          "application/json"
        ],
        "summary": "getTaskSync",
        "operationId": "getTaskSync",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID Задачи",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Состояние задачи",
            "schema": {
              "$ref": "#/definitions/TaskStatus"
            }
          },
          "400": {
            "description": "Передан не UUID",
            "schema": {}
          },
          "404": {
            "description": "Задача с {taskId} не найдена",
            "schema": {}
          },
          "500": {
            "description": "Что-то пошло не так",
            "schema": {}
          }
        }
      }
    },
    "/task/{taskId}/finished": {
      "get": {
        "description": "1. Ищет в БД текущее состояние задачи.\n2. Если статус не ` + "`" + `finished` + "`" + `, то\n   1. Ждет, когда задача завершится\n      * регулярно проверяя состояние задачи\n      * не ожидая дольше 5 минут\n   2. Отправляет клиенту состояние задачи\n3. Иначе возвращает текущее состояние задачи\n",
        "produces": [
          "application/json"
        ],
        "summary": "getFinishedTask",
        "operationId": "getFinishedTask",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "UUID Задачи",
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Состояние задачи",
            "schema": {
              "$ref": "#/definitions/TaskStatus"
            }
          },
          "400": {
            "description": "Передан не UUID",
            "schema": {}
          },
          "404": {
            "description": "Задача с {taskId} не найдена",
            "schema": {}
          },
          "408": {
            "description": "Ожидание превысило порог в 5 минут",
            "schema": {}
          },
          "500": {
            "description": "Что-то пошло не так",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "Status": {
      "description": "## статус задачи\n- ` + "`" + `created` + "`" + ` Задача создана, но ещё не запущена\n- ` + "`" + `running` + "`" + ` Задача выполняется\n- ` + "`" + `finished` + "`" + ` Задача выполнена",
      "type": "string",
      "title": "Status",
      "enum": [
        "created",
        "running",
        "finished"
      ]
    },
    "TaskStatus": {
      "description": "# Состояние задачи",
      "type": "object",
      "title": "TaskStatus",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "timestamp": {
          "description": "## Дата и время изменения статуса",
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}`))
}
