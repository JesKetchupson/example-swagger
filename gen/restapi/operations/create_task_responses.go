// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/runtime"
)

// CreateTaskAcceptedCode is the HTTP code returned for type CreateTaskAccepted
const CreateTaskAcceptedCode int = 202

/*CreateTaskAccepted Задача успешно созданы и запущена. UUID задачи в ответе

swagger:response createTaskAccepted
*/
type CreateTaskAccepted struct {

	/*
	  In: Body
	*/
	Payload strfmt.UUID `json:"body,omitempty"`
}

// NewCreateTaskAccepted creates CreateTaskAccepted with default headers values
func NewCreateTaskAccepted() *CreateTaskAccepted {

	return &CreateTaskAccepted{}
}

// WithPayload adds the payload to the create task accepted response
func (o *CreateTaskAccepted) WithPayload(payload strfmt.UUID) *CreateTaskAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create task accepted response
func (o *CreateTaskAccepted) SetPayload(payload strfmt.UUID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTaskAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateTaskInternalServerErrorCode is the HTTP code returned for type CreateTaskInternalServerError
const CreateTaskInternalServerErrorCode int = 500

/*CreateTaskInternalServerError Что-то пошло не так

swagger:response createTaskInternalServerError
*/
type CreateTaskInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateTaskInternalServerError creates CreateTaskInternalServerError with default headers values
func NewCreateTaskInternalServerError() *CreateTaskInternalServerError {

	return &CreateTaskInternalServerError{}
}

// WithPayload adds the payload to the create task internal server error response
func (o *CreateTaskInternalServerError) WithPayload(payload interface{}) *CreateTaskInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create task internal server error response
func (o *CreateTaskInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTaskInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
